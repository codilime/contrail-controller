# -*- mode: python; -*-
import os
import platform
import subprocess
from distutils.dir_util import copy_tree
from shutil import copyfile

vpath = '#/third_party/log4cplus-1.1.1'

env = DefaultEnvironment()

if platform.system() == 'Windows':
    output_lib = File('#/build/lib/log4cplusD.lib')
    output_dll = File('#/build/bin/log4cplusD.dll')
    
    def build(target, source, env):
        msbuild = [os.environ['MSBUILD'], 'log4cplus.vcxproj', '/p:PlatformToolset=v140',
                   '/p:Configuration=Debug', '/p:Platform=x64']
        subprocess.call(msbuild, cwd = os.path.join(Dir(vpath).abspath, 'msvc10'))
        copy_tree(os.path.join(Dir(vpath).abspath, r'include\log4cplus'), Dir('#/build/include/log4cplus').abspath)
        copyfile(os.path.join(Dir(vpath).abspath, r'msvc10\x64\bin.Debug\log4cplusD.lib'), output_lib.abspath)
        copyfile(os.path.join(Dir(vpath).abspath, r'msvc10\x64\bin.Debug\log4cplusD.dll'), output_dll.abspath)
    
    products = [output_lib, output_dll, File('#/build/include/log4cplus/logger.h')]
    
    env.Command(products, Dir(vpath), build)

else:
    config_opts = '--prefix=' + str(Dir('#/build'))

    cmd = ('(cd ' + Dir('.').abspath + '; ' + str(Dir(vpath)) +
           '/configure' + ' ' + config_opts + '; make clean; make; make install)')

    version = '.7.0.0'
    libs = [ str(File('#/build/lib/liblog4cplus' + env['LIBSUFFIX'])) ]
    shlibs = [ str(File('#/build/lib/liblog4cplus-1.1' + env['SHLIBSUFFIX'] +
                        version)) ]
    products = libs + shlibs + [ str(File('#/build/include/log4cplus/logger.h')) ]

    log4cplus_cfg = env.Command('config.status', str(Dir(vpath)), cmd)

    env.SideEffect(products, log4cplus_cfg)

    env.Alias('install', env.Install(env['INSTALL_LIB'], shlibs))

    env.Alias('install',
              env.Symlink(env['INSTALL_LIB'] + '/liblog4cplus-1.1.so' + '.7',
                          env['INSTALL_LIB'] + '/liblog4cplus-1.1.so' + version))
